{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1747325835468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747325896012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+## py-clob-client\n+\n+<a href='https://pypi.org/project/py-clob-client'>\n+    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n+</a>\n+\n+Python client for the Polymarket CLOB. Full API documentation can be found [here](https://polymarket.github.io/slate-docs/#introduction).\n+\n+### Installation\n+\n+`pip install py-clob-client`\n+\n+Intended for use with Python 3.9\n+\n+### Requisites\n+\n+#### Allowances\n+Allowances only need to be set when if your Polymarket account uses the WEB3/Metamask Login. \n+**Users that login via email do not have to complete the below allowance steps.**\n+The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n+\n+|                   token(s)                   |                   spender                    |                                  description                                   |\n+| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n+\n+See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n+\n+### Usage\n+\n+```py\n+import os\n+from py_clob_client.constants import POLYGON\n+from py_clob_client.client import ClobClient\n+from py_clob_client.clob_types import OrderArgs\n+from py_clob_client.order_builder.constants import BUY\n+\n+host = \"https://clob.polymarket.com\"\n+key = os.getenv(\"PK\")\n+chain_id = POLYGON\n+\n+# Create CLOB client and get/set API credentials\n+client = ClobClient(host, key=key, chain_id=chain_id)\n+client.set_api_creds(client.create_or_derive_api_creds())\n+\n+# Create and sign an order buying 100 YES tokens for 0.50c each\n+resp = client.create_and_post_order(OrderArgs(\n+    price=0.50,\n+    size=100.0,\n+    side=BUY,\n+    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n+))\n+\n+print(resp)\n+```\n+\n+**See [examples](examples/) for more.**\n"
                },
                {
                    "date": 1747325961381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,64 +58,4 @@\n print(resp)\n ```\n \n **See [examples](examples/) for more.**\n-## py-clob-client\n-\n-<a href='https://pypi.org/project/py-clob-client'>\n-    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n-</a>\n-\n-Python client for the Polymarket CLOB. Full API documentation can be found [here](https://polymarket.github.io/slate-docs/#introduction).\n-\n-### Installation\n-\n-`pip install py-clob-client`\n-\n-Intended for use with Python 3.9\n-\n-### Requisites\n-\n-#### Allowances\n-##Allowances only need to be set when if your Polymarket account uses the WEB3/Metamask Login. Users that login via email do not have to complete the below allowance steps. \n-The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n-\n-|                   token(s)                   |                   spender                    |                                  description                                   |\n-| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n-\n-See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n-\n-### Usage\n-\n-```py\n-import os\n-from py_clob_client.constants import POLYGON\n-from py_clob_client.client import ClobClient\n-from py_clob_client.clob_types import OrderArgs\n-from py_clob_client.order_builder.constants import BUY\n-\n-host = \"https://clob.polymarket.com\"\n-key = os.getenv(\"PK\")\n-chain_id = POLYGON\n-\n-# Create CLOB client and get/set API credentials\n-client = ClobClient(host, key=key, chain_id=chain_id)\n-client.set_api_creds(client.create_or_derive_api_creds())\n-\n-# Create and sign an order buying 100 YES tokens for 0.50c each\n-resp = client.create_and_post_order(OrderArgs(\n-    price=0.50,\n-    size=100.0,\n-    side=BUY,\n-    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n-))\n-\n-print(resp)\n-```\n-\n-**See [examples](examples/) for more.**\n"
                },
                {
                    "date": 1747326016400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n <a href='https://pypi.org/project/py-clob-client'>\n     <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n </a>\n \n-Python client for the Polymarket CLOB. Full API documentation can be found [here](https://polymarket.github.io/slate-docs/#introduction).\n+Python client for the Polymarket CLOB. Full API documentation can be found [here](https://docs.polymarket.com).\n \n ### Installation\n \n `pip install py-clob-client`\n"
                },
                {
                    "date": 1747326042558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n \n ### Requisites\n \n #### Allowances\n-Allowances only need to be set when if your Polymarket account uses the WEB3/Metamask Login. \n **Users that login via email do not have to complete the below allowance steps.**\n The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n \n |                   token(s)                   |                   spender                    |                                  description                                   |\n"
                },
                {
                    "date": 1747326056293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n ### Requisites\n \n #### Allowances\n-**Users that login via email do not have to complete the below allowance steps.**\n+**Users that login to the platform with Email/Magic Link do not have to complete the below allowance steps.**\n The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n \n |                   token(s)                   |                   spender                    |                                  description                                   |\n | :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n"
                },
                {
                    "date": 1747326311265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,4 +57,5 @@\n print(resp)\n ```\n \n **See [examples](examples/) for more.**\n+In this folder you'll find code samples and in addition we have provided some Jupyter notebooks to help you get started. We reccomend starting with the yourFirstTrade.ipynb to learn how the platform is organized. \n\\ No newline at end of file\n"
                },
                {
                    "date": 1747326393163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+## py-clob-client\n+\n+<a href='https://pypi.org/project/py-clob-client'>\n+    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n+</a>\n+\n+Python client for the Polymarket CLOB. Full API documentation can be found [here](https://docs.polymarket.com).\n+\n+### Installation\n+\n+`pip install py-clob-client`\n+\n+Intended for use with Python 3.9\n+\n+### Requisites\n+\n+#### Allowances\n+**Users that login to the platform with Email/Magic Link do not have to complete the below allowance steps.**\n+The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n+\n+|                   token(s)                   |                   spender                    |                                  description                                   |\n+| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n+\n+See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n+\n+### Usage\n+\n+```py\n+import os\n+from py_clob_client.constants import POLYGON\n+from py_clob_client.client import ClobClient\n+from py_clob_client.clob_types import OrderArgs\n+from py_clob_client.order_builder.constants import BUY\n+\n+host = \"https://clob.polymarket.com\"\n+key = os.getenv(\"PK\")\n+chain_id = POLYGON\n+\n+# Create CLOB client and get/set API credentials\n+client = ClobClient(host, key=key, chain_id=chain_id)\n+client.set_api_creds(client.create_or_derive_api_creds())\n+\n+# Create and sign an order buying 100 YES tokens for 0.50c each\n+resp = client.create_and_post_order(OrderArgs(\n+    price=0.50,\n+    size=100.0,\n+    side=BUY,\n+    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n+))\n+\n+print(resp)\n+```\n+\n+**See [examples](examples/) for more.**\n+his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality.\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747326744753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+## py-clob-client\n+\n+<a href='https://pypi.org/project/py-clob-client'>\n+    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n+</a>\n+\n+Python client for the Polymarket CLOB. Full API documentation can be found [here](https://docs.polymarket.com).\n+\n+### Installation\n+\n+`pip install py-clob-client`\n+\n+Intended for use with Python 3.9\n+\n+### Requisites\n+\n+#### Allowances\n+**Users that login to the platform with Email/Magic Link do not have to complete the below allowance steps.**\n+The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n+\n+|                   token(s)                   |                   spender                    |                                  description                                   |\n+| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n+| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n+| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n+\n+See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n+\n+### Usage\n+\n+```py\n+import os\n+from py_clob_client.constants import POLYGON\n+from py_clob_client.client import ClobClient\n+from py_clob_client.clob_types import OrderArgs\n+from py_clob_client.order_builder.constants import BUY\n+\n+host = \"https://clob.polymarket.com\"\n+key = os.getenv(\"PK\")\n+chain_id = POLYGON\n+\n+# Create CLOB client and get/set API credentials\n+client = ClobClient(host, key=key, chain_id=chain_id)\n+client.set_api_creds(client.create_or_derive_api_creds())\n+\n+# Create and sign an order buying 100 YES tokens for 0.50c each\n+resp = client.create_and_post_order(OrderArgs(\n+    price=0.50,\n+    size=100.0,\n+    side=BUY,\n+    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n+))\n+\n+print(resp)\n+```\n+\n+**See [examples](examples/) for more.**\n+his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality. Please see Developer Resources [Here](https://docs.polymarket.com)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747326750847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,127 +57,5 @@\n print(resp)\n ```\n \n **See [examples](examples/) for more.**\n-his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality. Please see Developer Resources [Here](https://docs.polymarket.com)\n-## py-clob-client\n-\n-<a href='https://pypi.org/project/py-clob-client'>\n-    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n-</a>\n-\n-Python client for the Polymarket CLOB. Full API documentation can be found [here](https://docs.polymarket.com).\n-\n-### Installation\n-\n-`pip install py-clob-client`\n-\n-Intended for use with Python 3.9\n-\n-### Requisites\n-\n-#### Allowances\n-**Users that login to the platform with Email/Magic Link do not have to complete the below allowance steps.**\n-The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n-\n-|                   token(s)                   |                   spender                    |                                  description                                   |\n-| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n-\n-See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n-\n-### Usage\n-\n-```py\n-import os\n-from py_clob_client.constants import POLYGON\n-from py_clob_client.client import ClobClient\n-from py_clob_client.clob_types import OrderArgs\n-from py_clob_client.order_builder.constants import BUY\n-\n-host = \"https://clob.polymarket.com\"\n-key = os.getenv(\"PK\")\n-chain_id = POLYGON\n-\n-# Create CLOB client and get/set API credentials\n-client = ClobClient(host, key=key, chain_id=chain_id)\n-client.set_api_creds(client.create_or_derive_api_creds())\n-\n-# Create and sign an order buying 100 YES tokens for 0.50c each\n-resp = client.create_and_post_order(OrderArgs(\n-    price=0.50,\n-    size=100.0,\n-    side=BUY,\n-    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n-))\n-\n-print(resp)\n-```\n-\n-**See [examples](examples/) for more.**\n-his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality.\n-## py-clob-client\n-\n-<a href='https://pypi.org/project/py-clob-client'>\n-    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n-</a>\n-\n-Python client for the Polymarket CLOB. Full API documentation can be found [here](https://docs.polymarket.com).\n-\n-### Installation\n-\n-`pip install py-clob-client`\n-\n-Intended for use with Python 3.9\n-\n-### Requisites\n-\n-#### Allowances\n-**Users that login to the platform with Email/Magic Link do not have to complete the below allowance steps.**\n-The correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n-\n-|                   token(s)                   |                   spender                    |                                  description                                   |\n-| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n-| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n-| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n-\n-See [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n-\n-### Usage\n-\n-```py\n-import os\n-from py_clob_client.constants import POLYGON\n-from py_clob_client.client import ClobClient\n-from py_clob_client.clob_types import OrderArgs\n-from py_clob_client.order_builder.constants import BUY\n-\n-host = \"https://clob.polymarket.com\"\n-key = os.getenv(\"PK\")\n-chain_id = POLYGON\n-\n-# Create CLOB client and get/set API credentials\n-client = ClobClient(host, key=key, chain_id=chain_id)\n-client.set_api_creds(client.create_or_derive_api_creds())\n-\n-# Create and sign an order buying 100 YES tokens for 0.50c each\n-resp = client.create_and_post_order(OrderArgs(\n-    price=0.50,\n-    size=100.0,\n-    side=BUY,\n-    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n-))\n-\n-print(resp)\n-```\n-\n-**See [examples](examples/) for more.**\n-In this folder you'll find code samples and in addition we have provided some Jupyter notebooks to help you get started. We reccomend starting with the yourFirstTrade.ipynb to learn how the platform is organized. \n\\ No newline at end of file\n+his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality. Please see Developer Resources [Here](https://docs.polymarket.com)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747326757267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,5 +57,5 @@\n print(resp)\n ```\n \n **See [examples](examples/) for more.**\n-his folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality. Please see Developer Resources [Here](https://docs.polymarket.com)\n\\ No newline at end of file\n+This folder contains code samples along with several Jupyter notebooks designed to help you get started. We recommend beginning with `yourFirstTrade.ipynb`, which provides a guided introduction to the platform's structure and functionality. Please see Developer Resources [Here](https://docs.polymarket.com)\n\\ No newline at end of file\n"
                }
            ],
            "date": 1747325835468,
            "name": "Commit-0",
            "content": "## py-clob-client\n\n<a href='https://pypi.org/project/py-clob-client'>\n    <img src='https://img.shields.io/pypi/v/py-clob-client.svg' alt='PyPI'/>\n</a>\n\nPython client for the Polymarket CLOB. Full API documentation can be found [here](https://polymarket.github.io/slate-docs/#introduction).\n\n### Installation\n\n`pip install py-clob-client`\n\nIntended for use with Python 3.9\n\n### Requisites\n\n#### Allowances\n##Allowances only need to be set when if your Polymarket account uses the WEB3/Metamask Login. Users that login via email do not have to complete the below allowance steps. \nThe correct token allowances must be set before orders can be placed. The following mainnet (Polygon) allowances should be set by the funding (maker) address. For testnet addresses and additional documentation please refer to the [API documentation](https://polymarket.github.io/slate-docs/#introduction).\n\n|                   token(s)                   |                   spender                    |                                  description                                   |\n| :------------------------------------------: | :------------------------------------------: | :----------------------------------------------------------------------------: |\n| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |            allow the CTF Exchange contract to transfer user's usdc             |\n| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` |        allow the Neg Risk CTF Exchange contract to transfer user's usdc        |\n| `0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |          allow the Neg Risk Adapter contract to transfer user's usdc           |\n| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0x4bFb41d5B3570DeFd03C39a9A4D8dE6Bd8B8982E` |     allow the CTF Exchange contract to transfer user's conditional tokens      |\n| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xC5d563A36AE78145C45a50134d48A1215220f80a` | allow the Neg Risk CTF Exchange contract to transfer user's conditional tokens |\n| `0x4D97DCd97eC945f40cF65F87097ACe5EA0476045` | `0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296` |   allow the Neg Risk Adapter contract to transfer user's conditional tokens    |\n\nSee [this gist](https://gist.github.com/poly-rodr/44313920481de58d5a3f6d1f8226bd5e) for a an example of how to set these allowances for an account using python.\n\n### Usage\n\n```py\nimport os\nfrom py_clob_client.constants import POLYGON\nfrom py_clob_client.client import ClobClient\nfrom py_clob_client.clob_types import OrderArgs\nfrom py_clob_client.order_builder.constants import BUY\n\nhost = \"https://clob.polymarket.com\"\nkey = os.getenv(\"PK\")\nchain_id = POLYGON\n\n# Create CLOB client and get/set API credentials\nclient = ClobClient(host, key=key, chain_id=chain_id)\nclient.set_api_creds(client.create_or_derive_api_creds())\n\n# Create and sign an order buying 100 YES tokens for 0.50c each\nresp = client.create_and_post_order(OrderArgs(\n    price=0.50,\n    size=100.0,\n    side=BUY,\n    token_id=\"71321045679252212594626385532706912750332728571942532289631379312455583992563\"\n))\n\nprint(resp)\n```\n\n**See [examples](examples/) for more.**\n"
        }
    ]
}